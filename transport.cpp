
#include <math.h>
#include <cmath>
#include <stdlib.h>
using namespace std;
#include <iostream>
#include "qcd.hpp"
#include "transport.hpp"


// 1st order shear coefficient

double beta_shear(double T)
{
	// beta_shear = eta / tau_pi = I32/T in quasiparticle kinetic model
	#ifndef CONFORMAL_EOS

		// modeled with BEST EOS data
		#ifdef BEST
			double T2 = T * T;
			double T3 = T2 * T;
			double T4 = T3 * T;
			double T5 = T4 * T;
			double T6 = T5 * T;
			double T7 = T6 * T;
			double T8 = T7 * T;
			double T9 = T8 * T;
			double T10 = T9 * T;
			double T11 = T10 * T;
			double T12 = T11 * T;
			double T13 = T12 * T;
			double T14 = T13 * T;

			return (0.11389523069479185 - 2.705127789711982*T + 28.742274634585783*T2 - 179.70799505135633*T3 + 730.506119388531*T4 - 2007.1240462918665*T5 +
     3721.0091345659325*T6 - 4366.923562236631*T7 + 2347.927819272824*T8 + 1559.8495170149938*T9 - 4257.643429592799*T10 +
     3938.5865394866464*T11 - 1999.1891431300426*T12 + 551.2544143662707*T13 - 64.67817053548931*T14)/
   (-8.065469391396581 + 92.36219194757648*T - 453.6119231622029*T2 + 1282.9299920278522*T3 - 2333.58921706985*T4 + 2843.5221412837436*T5 -
     2291.373282720429*T6 + 1092.688273629689*T7 - 140.80190149751965*T8 - 177.18993543735297*T9 + 126.47676060292035*T10 -
     39.29732109229348*T11 + 6.547795713678674*T12 - 0.6094551149533467*T13 + 0.023633386710670345*T14);

	   	// modeled with Wuppertal-Budapest EOS data
	   	#else
	   		double T2 = T * T;
			double T3 = T2 * T;
			double T4 = T3 * T;
			double T5 = T4 * T;
			double T6 = T5 * T;
			double T7 = T6 * T;
			double T8 = T7 * T;
			double T9 = T8 * T;
			double T10 = T9 * T;
			double T11 = T10 * T;
			double T12 = T11 * T;
			double T13 = T12 * T;
			double T14 = T13 * T;
			double T15 = T14 * T;
			double T16 = T15 * T;

			return (3.8849752086912623 - 81.75711548883612*T + 758.6855793464125*T2 - 4080.0043988595335*T3 + 13998.196317295955*T4 -
     31510.132744708902*T5 + 45243.06190393971*T6 - 35235.3406336028*T7 + 177.91096020599664*T8 +
     29147.604245677583*T9 - 25312.14305681918*T10 + 36.10028178319713*T11 + 17115.132549366466*T12 -
     16732.697486754332*T13 + 8789.832705192895*T14 - 2701.796835519705*T15 + 383.5056919121435*T16)/
   (177.6960254757862 - 869.2969326874477*T + 1319.1268753523589*T2 + 404.40956148532797*T3 - 3172.2287967031607*T4 +
     1651.5674255087415*T5 + 5021.62669182579*T6 - 9028.791696042206*T7 + 4970.041353891375*T8 +
     2231.4303081440057*T9 - 5594.563514770515*T10 + 4487.194614133707*T11 - 2135.863031817189*T12 +
     645.6924363953377*T13 - 120.68220509406726*T14 + 13.330024063412038*T15 - 0.6622117410668655*T16);

			// return (8.611704298094825e-6 - 0.001405354006113392*T + 0.059924402660583354*T2 - 1.1252821226321765*T3 + 11.505088678768702*T4 - 72.86243933500441*T5 +
	  //    	312.67652000568955*T6 - 919.4553300642775*T7 + 1851.880055174282*T8 - 2520.2910195876684*T9 + 2228.4719999229687*T10 -
	  //    	1163.3696941415265*T11 + 275.1649200477449*T12)/
	  //  	(4.814184219646834 - 23.427763291345297*T + 78.10907293901035*T2 - 220.9834748507111*T3 + 463.6211365026477*T4 - 658.0962754530466*T5 +
	  //    	604.0491642749903*T6 - 329.15455711633166*T7 + 83.03984882593176*T8 - 0.34262854377950497*T9 + 0.03765047242502595*T10 -
	  //    	0.0024572359354327667*T11 + 0.0000720828838022736*T12);
	   	#endif

   	#else
   		return 4.0 * EOS_FACTOR * powf(T,4.0) / 15.0;
   	#endif
}


double beta_bulk(double T)
{
	// beta_bulk = zeta / tau_Pi = 5/3 beta_pi + cs2(mdmdT*I11 - e - p) in quasiparticle model
	#ifndef CONFORMAL_EOS

		// modeled with BEST EOS data
		#ifdef BEST
			double T2 = T * T;
			double T3 = T2 * T;
			double T4 = T3 * T;
			double T5 = T4 * T;
			double T6 = T5 * T;
			double T7 = T6 * T;
			double T8 = T7 * T;
			double T9 = T8 * T;
			double T10 = T9 * T;
			double T11 = T10 * T;
			double T12 = T11 * T;

			return (-0.07227796340001295 + 1.3143764840615304*T - 10.618632711354438*T2 + 50.49226038033788*T3 - 157.4895501326704*T4 + 339.56597470170806*T5 -
     518.8479144079654*T6 + 565.401177446674*T7 - 434.90715638011426*T8 + 229.10104947248428*T9 - 77.73510380062434*T10 +
     14.99701288452569*T11 - 1.2012010330086933*T12)/
   (36.286491731381375 - 385.4575151988946*T + 1863.5710590765027*T2 - 5417.869823144005*T3 + 10538.668878148343*T4 - 14431.58178913021*T5 +
     14242.335632907661*T6 - 10182.425674573899*T7 + 5216.5453702051245*T8 - 1858.714375839709*T9 + 434.4504198478326*T10 -
     59.390426532205105*T11 + 3.581827839432567*T12);

	   	// modeled with WB EOS data
	   	#else
			double T2 = T * T;
			double T3 = T2 * T;
			double T4 = T3 * T;
			double T5 = T4 * T;
			double T6 = T5 * T;
			double T7 = T6 * T;
			double T8 = T7 * T;
			double T9 = T8 * T;
			double T10 = T9 * T;
			double T11 = T10 * T;
			double T12 = T11 * T;
			double T13 = T12 * T;
			double T14 = T13 * T;

			return (0.008510670056129977 - 1.353919995523633*T + 13.608904166522786*T2 - 51.321537229771266*T3 + 73.96045299666834*T4 +
     43.35307088459302*T5 - 305.47155148480124*T6 + 456.6456107250134*T7 - 333.5507775553348*T8 + 121.29147704125069*T9 -
     17.1556447046427*T10)/
   (189.30433417113048 - 1007.7250064961569*T + 2157.938044817338*T2 - 2186.1853677466547*T3 + 680.4998075037523*T4 +
     632.8823616536517*T5 - 590.085899407071*T6 + 50.80375306281021*T7 + 109.62729069676597*T8 - 40.81865517144528*T9 +
     3.833720025887098*T10);

			// return (0.057187918268175174 - 2.5795110808844144*T + 31.966143337661794*T2 - 186.97202223464143*T3 + 632.9739160169219*T4 -
	  //    1356.8644912535221*T5 + 1937.6556428262882*T6 - 1901.4144609887912*T7 + 1305.7115016142484*T8 - 632.7107309491553*T9 +
	  //    215.7883928137199*T10 - 50.783337922429304*T11 + 7.882963305898372*T12 - 0.7302386364254765*T13 +
	  //    0.031006456705249083*T14)/
	  //  (2168.5818494848654 - 17367.372494454743*T + 62866.89323544513*T2 - 136008.52657020878*T3 + 196076.0893015133*T4 -
	  //    198954.9682758633*T5 + 146384.87731197142*T6 - 79310.95783243925*T7 + 31803.091369445476*T8 - 9398.242646642117*T9 +
	  //    2016.6245278736917*T10 - 304.98512854363526*T11 + 30.758339605713708*T12 - 1.852389925261096*T13 +
	  //    0.05027444936020055*T14);
	   	#endif

   	#else
   		return 0.0;
   	#endif
}



// 2nd order shear transport coefficients / betapi

double tauSS(double T)
{
	#ifndef CONFORMAL_EOS

		#ifdef BEST
			double T2 = T * T;
			double T3 = T2 * T;
			double T4 = T3 * T;
			double T5 = T4 * T;
			double T6 = T5 * T;
			double T7 = T6 * T;
			double T8 = T7 * T;
			double T9 = T8 * T;
			double T10 = T9 * T;
			double T11 = T10 * T;
			double T12 = T11 * T;
			double T13 = T12 * T;
			double T14 = T13 * T;
			double T15 = T14 * T;
			double T16 = T15 * T;
			double T17 = T16 * T;
			double T18 = T17 * T;
			double T19 = T18 * T;
			double T20 = T19 * T;

			return (89.41311519637208 - 1041.094113691887*T + 4764.425117625884*T2 - 10090.476443289059*T3 + 8917.974251380117*T4 -
     13801.431906568394*T5 + 83072.09022937233*T6 - 183159.67600150174*T7 + 28810.082526326736*T8 + 498832.37222725525*T9 -
     699490.5306417008*T10 - 254119.29595106983*T11 + 1.7323548973462286e6*T12 - 2.0899029775642569e6*T13 +
     1.0174068389595072e6*T14 + 19083.15205472634*T15 + 14222.166974284355*T16 - 509848.2662136577*T17 +
     572523.795547174*T18 - 266483.5357049334*T19 + 47864.39550819899*T20)/
   (47.27009609405139 - 491.15454407269385*T + 1562.0632925957718*T2 + 1608.4170703752723*T3 - 24847.495447390378*T4 +
     72625.60281846905*T5 - 89499.1223440185*T6 + 1398.3882901031516*T7 + 130534.35667663184*T8 - 142739.4307650025*T9 +
     42048.92302717659*T10 + 47516.79409529657*T11 - 262474.21341655555*T12 + 813625.9255959115*T13 -
     1.3757210900791723e6*T14 + 1.2966474867523108e6*T15 - 533652.0145401144*T16 - 197061.1201749902*T17 +
     366672.47585666185*T18 - 180554.15971412277*T19 + 32754.915203308326*T20);

		#else
			double T1 = (double)T;
			double T2 = T1 * T1;
			double T3 = T2 * T1;
			double T4 = T3 * T1;
			double T5 = T4 * T1;
			double T6 = T5 * T1;
			double T7 = T6 * T1;
			double T8 = T7 * T1;
			double T9 = T8 * T1;
			double T10 = T9 * T1;
			double T11 = T10 * T1;
			double T12 = T11 * T1;
			double T13 = T12 * T1;
			double T14 = T13 * T1;
			double T15 = T14 * T1;
			double T16 = T15 * T1;
			double T17 = T16 * T1;
			double T18 = T17 * T1;
			double T19 = T18 * T1;
			double T20 = T19 * T1;
			return (3.1902902102171014e-14 + 3.6473403148287593e-11*T - 1.4681531534845377e-9*T2 - 2.2978151952475593e-7*T3 + 0.000025368864732002707*T4 -
	     0.0012270677121964577*T5 + 0.03679814632697644*T6 - 0.7615536873938464*T7 + 11.424552745479811*T8 -
	     126.82132531785702*T9 + 1028.7700003067368*T10 - 5604.954789297192*T11 + 14890.7521305975*T12 +
	     19360.924240267435*T13 - 204925.02293835668*T14 + 537103.0759431187*T15 - 745512.8555881173*T16 +
	     561278.0373283497*T17 - 132801.76145649268*T18 - 112731.1368481797*T19 + 72477.80043807805*T20)/
	   (1.6126888610794705e-14 + 1.8580607657742264e-11*T - 7.129928928195451e-10*T2 - 1.2044460202699227e-7*T3 + 0.000013028426199263437*T4 -
	     0.0006242124741645514*T5 + 0.01858142870918551*T6 - 0.382181612836983*T7 + 5.704001436028822*T8 -
	     62.95728786337562*T9 + 503.66887793696134*T10 - 2609.353744732505*T11 + 5155.099584184365*T12 +
	     25270.593371494604*T13 - 157839.53929233216*T14 + 384518.19842363964*T15 - 521522.377190076*T16 +
	     388473.81248813897*T17 - 90229.75736667341*T18 - 78576.79227181048*T19 + 49825.99099452628*T20);
   		#endif
	#else
		return 10.0/7.0;
	#endif
}


double deltaSS(double T)
{
	#ifndef CONFORMAL_EOS

		#ifdef BEST
			double T2 = T * T;
			double T3 = T2 * T;
			double T4 = T3 * T;
			double T5 = T4 * T;
			double T6 = T5 * T;
			double T7 = T6 * T;
			double T8 = T7 * T;
			double T9 = T8 * T;
			double T10 = T9 * T;
			double T11 = T10 * T;
			double T12 = T11 * T;
			double T13 = T12 * T;
			double T14 = T13 * T;
			double T15 = T14 * T;
			double T16 = T15 * T;
			double T17 = T16 * T;
			double T18 = T17 * T;
			double T19 = T18 * T;
			double T20 = T19 * T;

			return (0.38988241949712893 - 8.39647991747567*T + 78.64174583058013*T2 - 417.04915480152675*T3 + 1358.8678261634411*T4 -
     2769.3575306569605*T5 + 3793.9294773679967*T6 - 6494.90974085766*T7 + 20619.860733197867*T8 - 49821.02060139982*T9 +
     55754.66764111688*T10 + 33820.7033277702*T11 - 218000.59583932348*T12 + 345691.6868052703*T13 - 254644.01063959935*T14 -
     6596.2044403952605*T15 + 213720.54843599937*T16 - 231941.4031512659*T17 + 131494.25816948968*T18 -
     41437.56844198437*T19 + 5797.101763395689*T20)/
   (0.2233707470988645 - 4.3221474822781*T + 32.72477345887257*T2 - 97.48968835327561*T3 - 197.58055106531043*T4 +
     2925.050433142677*T5 - 12478.872119968111*T6 + 30093.05270038141*T7 - 41701.74831648545*T8 + 19757.619397014216*T9 +
     40769.7365252435*T10 - 93523.35990357983*T11 + 91186.0190259977*T12 - 67581.44127264079*T13 + 103634.5371286433*T14 -
     198000.3869010546*T15 + 251939.8235214588*T16 - 204636.49812958456*T17 + 105467.16113361846*T18 -
     31983.106757029047*T19 + 4398.957475831064*T20);

   		#else
   			double T1 = (double)T;
			double T2 = T1 * T1;
			double T3 = T2 * T1;
			double T4 = T3 * T1;
			double T5 = T4 * T1;
			double T6 = T5 * T1;
			double T7 = T6 * T1;
			double T8 = T7 * T1;
			double T9 = T8 * T1;
			double T10 = T9 * T1;
			double T11 = T10 * T1;
			double T12 = T11 * T1;
			double T13 = T12 * T1;
			double T14 = T13 * T1;
			double T15 = T14 * T1;
			double T16 = T15 * T1;
			double T17 = T16 * T1;
			double T18 = T17 * T1;
			double T19 = T18 * T1;
			double T20 = T19 * T1;
			// update 1/17/18
			return (1.7499572042666775e-12 - 1.5571159977635427e-9*T + 8.848133756946375e-7*T2 + 0.000013013271311448287*T3 - 0.004087636318254011*T4 +
		     0.18849858425446703*T5 - 4.8284190324688*T6 + 85.73663158668697*T7 - 1125.3229340667808*T8 + 10773.322529280082*T9 -
		     72152.80680391593*T10 + 324314.92209569283*T11 - 955517.6303471794*T12 + 1.874242243596237e6*T13 -
		     2.498904646379022e6*T14 + 2.2988736650466654e6*T15 - 1.4578392727884478e6*T16 + 617593.6402472107*T17 -
		     161368.2325483544*T18 + 22751.961488447094*T19 - 955.3699615795484*T20)/
		   (5.1855432518593683e-14 - 1.807109755134467e-10*T + 5.309050398710913e-7*T2 + 8.52928554634838e-6*T3 - 0.002620327695970035*T4 +
		     0.12306180015981406*T5 - 3.238669647587383*T6 + 59.242508485990605*T7 - 795.8803523322663*T8 + 7717.895820326877*T9 -
		     51918.545819634455*T10 + 233285.75326655412*T11 - 685857.5907495414*T12 + 1.3425505193215006e6*T13 -
		     1.7888186059759657e6*T14 + 1.6478158992606592e6*T15 - 1.0481884899655643e6*T16 + 445696.1025395714*T17 -
		     116797.67116919166*T18 + 16487.01063937115*T19 - 683.4143410130719*T20);

			// with quasiparticle term
			// return (2.3123648435463478e-14 + 2.653134872793681e-11*T - 1.0455326350305228e-9*T2 - 1.696063340536917e-7*T3 + 0.000018560221286427176*T4 -
		 //     0.0008944307915939945*T5 + 0.02674899697420029*T6 - 0.5522877505882912*T7 + 8.267937945201288*T8 -
		 //     91.56029564978036*T9 + 739.0326553515318*T10 - 3963.3404882266636*T11 + 9730.169228055476*T12 +
		 //     20965.239425812917*T13 - 173092.68038544193*T14 + 441601.8355209196*T15 - 609985.9561191576*T16 +
		 //     461827.6835107632*T17 - 114982.2164250206*T18 - 86311.83441101473*T19 + 57047.98999643514*T20)/
		 //   (1.3980641599349208e-14 + 1.6127693285377702e-11*T - 6.144411204860252e-10*T2 - 1.051433890938483e-7*T3 + 0.000011345131910016187*T4 -
		 //     0.0005431282800680449*T5 + 0.01615900693425236*T6 - 0.3321833715521992*T7 + 4.954699020346726*T8 - 54.642993503851*T9 +
		 //     436.6938963652453*T10 - 2258.854846886464*T11 + 4436.04092582274*T12 + 22096.673716873258*T13 - 137668.7319149623*T14 +
		 //     335897.8325801482*T15 - 457350.6414855325*T16 + 343974.7038645733*T17 - 84726.88495746425*T18 - 64580.14059500214*T19 +
		 //     42303.904169419286*T20);

			// return (2.3123648435463478e-14 + 2.653134872793681e-11*T - 1.0455326350305228e-9*T2 - 1.696063340536917e-7*T3 + 0.000018560221286427176*T4 -
	  //    0.0008944307915939945*T5 + 0.02674899697420029*T6 - 0.5522877505882912*T7 + 8.267937945201288*T8 -
	  //    91.56029564978036*T9 + 739.0326553515318*T10 - 3963.3404882266636*T11 + 9730.169228055476*T12 +
	  //    20965.239425812917*T13 - 173092.68038544193*T14 + 441601.8355209196*T15 - 609985.9561191576*T16 +
	  //    461827.6835107632*T17 - 114982.2164250206*T18 - 86311.83441101473*T19 + 57047.98999643514*T20)/
	  //  (1.3980641599349208e-14 + 1.6127693285377702e-11*T - 6.144411204860252e-10*T2 - 1.051433890938483e-7*T3 + 0.000011345131910016187*T4 -
	  //    0.0005431282800680449*T5 + 0.01615900693425236*T6 - 0.3321833715521992*T7 + 4.954699020346726*T8 - 54.642993503851*T9 +
	  //    436.6938963652453*T10 - 2258.854846886464*T11 + 4436.04092582274*T12 + 22096.673716873258*T13 - 137668.7319149623*T14 +
	  //    335897.8325801482*T15 - 457350.6414855325*T16 + 343974.7038645733*T17 - 84726.88495746425*T18 - 64580.14059500214*T19 +
	  //    42303.904169419286*T20);
   		#endif
	#else
		return 4.0/3.0;
	#endif
}


double lambdaSB(double T)
{
	#ifndef CONFORMAL_EOS

		#ifdef BEST
			double T2 = T * T;
			double T3 = T2 * T;
			double T4 = T3 * T;
			double T5 = T4 * T;
			double T6 = T5 * T;
			double T7 = T6 * T;
			double T8 = T7 * T;
			double T9 = T8 * T;
			double T10 = T9 * T;
			double T11 = T10 * T;
			double T12 = T11 * T;
			double T13 = T12 * T;
			double T14 = T13 * T;
			double T15 = T14 * T;
			double T16 = T15 * T;
			double T17 = T16 * T;
			double T18 = T17 * T;
			double T19 = T18 * T;
			double T20 = T19 * T;

			return (12.99206454463569 - 169.54052200735396*T + 926.7433627872834*T2 - 2737.729005326291*T3 + 4894.186943117873*T4 -
     6808.352385039898*T5 + 11455.103577067215*T6 - 16223.412682922612*T7 - 1726.4466539808268*T8 + 51533.66615818827*T9 -
     71405.25614289886*T10 - 11473.045592331333*T11 + 150133.97086759048*T12 - 225050.65838211164*T13 +
     216005.29370917648*T14 - 195103.38216242057*T15 + 185654.15734013912*T16 - 151139.0928987391*T17 +
     86270.04307986688*T18 - 29641.407324317806*T19 + 4592.175198159571*T20)/
   (6.942431024560642 - 83.25934313181178*T + 372.4163321557213*T2 - 540.4041791636039*T3 - 1451.0176972731367*T4 +
     7760.53173158144*T5 - 13745.493990457477*T6 + 7380.613987314975*T7 + 13872.501591214515*T8 - 32252.74398590952*T9 +
     26461.959898609737*T10 + 12906.06555162381*T11 - 78629.42916778443*T12 + 129713.94962826988*T13 -
     108503.32052649333*T14 + 15229.21907703306*T15 + 74506.79069856368*T16 - 96441.18087908327*T17 + 61933.9361101176*T18 -
     21899.948857152383*T19 + 3401.8773149926765*T20);

		#else
			double T1 = (double)T;
			double T2 = T1 * T1;
			double T3 = T2 * T1;
			double T4 = T3 * T1;
			double T5 = T4 * T1;
			double T6 = T5 * T1;
			double T7 = T6 * T1;
			double T8 = T7 * T1;
			double T9 = T8 * T1;
			double T10 = T9 * T1;
			double T11 = T10 * T1;
			double T12 = T11 * T1;
			double T13 = T12 * T1;
			double T14 = T13 * T1;
			double T15 = T14 * T1;
			double T16 = T15 * T1;
			double T17 = T16 * T1;
			double T18 = T17 * T1;
			double T19 = T18 * T1;
			double T20 = T19 * T1;
			return (8.074008637896085e-14 + 1.4521738724610116e-10*T + 1.0561878663243956e-8*T2 - 2.886475329123721e-6*T3 + 0.00019632730980086865*T4 -
	     0.006805817865750017*T5 + 0.1282156842151053*T6 - 0.7811831200642801*T7 - 25.386802662803294*T8 +
	     863.2338792892917*T9 - 14260.43370444323*T10 + 152128.81589917117*T11 - 1.061580723945412e6*T12 +
	     4.342640843930646e6*T13 - 7.550038649670816e6*T14 - 1.0147443792119526e6*T15 + 2.9548735254152626e7*T16 -
	     6.207545065954556e7*T17 + 6.899546728673512e7*T18 - 4.33542123965421e7*T19 + 1.235521034989592e7*T20)/
	   (4.0796975673978034e-14 + 7.38306951869429e-11*T + 5.536739982337452e-9*T2 - 1.4739949454496843e-6*T3 + 0.00009890464996939923*T4 -
	     0.0033603924874021146*T5 + 0.06032568306522431*T6 - 0.24469257569644493*T7 - 16.386289919253468*T8 +
	     499.4926315810809*T9 - 8049.062451749535*T10 + 84763.1844624573*T11 - 580218.5165589283*T12 + 2.254512842174514e6*T13 -
	     3.0367484406330865e6*T14 - 4.982074081104018e6*T15 + 2.6681365580501582e7*T16 - 4.996827307344645e7*T17 +
	     5.344145521716283e7*T18 - 3.285385819602032e7*T19 + 9.185346457229817e6*T20);
   		#endif
	#else
		return 1.2;
	#endif
}


// 2nd order bulk transport coefficients / betaPi

double deltaBB(double T)
{
	#ifndef CONFORMAL_EOS

		#ifdef BEST
			double T2 = T * T;
			double T3 = T2 * T;
			double T4 = T3 * T;
			double T5 = T4 * T;
			double T6 = T5 * T;
			double T7 = T6 * T;
			double T8 = T7 * T;
			double T9 = T8 * T;
			double T10 = T9 * T;
			double T11 = T10 * T;
			double T12 = T11 * T;
			double T13 = T12 * T;
			double T14 = T13 * T;
			double T15 = T14 * T;
			double T16 = T15 * T;
			double T17 = T16 * T;
			double T18 = T17 * T;
			double T19 = T18 * T;
			double T20 = T19 * T;

			return (1.112464830627627 - 30.89549922917583*T + 396.870006274666*T2 - 3129.9976866790344*T3 + 16932.514545225313*T4 -
     66299.23075219386*T5 + 192274.86803468294*T6 - 411200.446249874*T7 + 614971.2968848197*T8 - 502023.1644284749*T9 -
     273587.7966665477*T10 + 1.7086212823445613e6*T11 - 3.196746306338305e6*T12 + 3.877749066174241e6*T13 -
     3.3898453966839234e6*T14 + 2.185472078781732e6*T15 - 1.032817317133193e6*T16 + 348935.5353149965*T17 -
     80347.96558106475*T18 + 11439.311285149332*T19 - 765.3576755409805*T20)/
   (0.37126794205159463 - 6.85080512583097*T + 44.95316470829425*T2 - 40.74867031423679*T3 - 1259.8476683470476*T4 +
     9594.305515372564*T5 - 37292.87815999376*T6 + 89724.25271332267*T7 - 130225.71895100547*T8 + 75583.94325665919*T9 +
     99151.85661485561*T10 - 222883.41719277928*T11 + 19292.22932716292*T12 + 541325.663364556*T13 -
     1.0859744865862972e6*T14 + 1.2010209335366846e6*T15 - 873622.406544788*T16 + 430094.25540051*T17 -
     138701.1117796839*T18 + 26384.77537231692*T19 - 2210.019669868818*T20);

		#else
			double T1 = (double)T;
			double T2 = T1 * T1;
			double T3 = T2 * T1;
			double T4 = T3 * T1;
			double T5 = T4 * T1;
			double T6 = T5 * T1;
			double T7 = T6 * T1;
			double T8 = T7 * T1;
			double T9 = T8 * T1;
			double T10 = T9 * T1;
			double T11 = T10 * T1;
			double T12 = T11 * T1;
			double T13 = T12 * T1;
			double T14 = T13 * T1;
			double T15 = T14 * T1;
			double T16 = T15 * T1;
			double T17 = T16 * T1;
			double T18 = T17 * T1;
			double T19 = T18 * T1;
			double T20 = T19 * T1;
			// update 1/17/18
			return (4.000267284282209e-12 - 3.0879772027572766e-9*T + 4.5302624313421513e-7*T2 + 0.000017158369952389084*T3 - 0.0025238552009140204*T4 +
		     0.09477510033826309*T5 - 1.874849160877261*T6 + 23.35969535190475*T7 - 206.58828540117307*T8 + 1454.8305978358987*T9 -
		     8585.239042714478*T10 + 39546.8949027407*T11 - 127857.39764585026*T12 + 278615.681761601*T13 - 405500.44769170583*T14 +
		     393556.46714927757*T15 - 252576.56987596402*T16 + 104575.64223081878*T17 - 26467.905877428195*T18 +
		     3707.971424936254*T19 - 215.16493639629013*T20)/
		   (2.856602044582374e-14 - 1.001912473506082e-10*T + 3.015090643313372e-7*T2 + 9.06009770866785e-6*T3 - 0.0017825053847048905*T4 +
		     0.07602394563180129*T5 - 1.7868001291877447*T6 + 28.663432170389964*T7 - 343.3962911888421*T8 + 3102.5411852704556*T9 -
		     20318.7922459479*T10 + 91651.8166707478*T11 - 274937.72878699464*T12 + 549152.5233197558*T13 - 735705.717384186*T14 +
		     661290.9939329462*T15 - 393821.95296824834*T16 + 150676.62369657753*T17 - 34910.330834410444*T18 +
		     4399.37586777733*T19 - 200.57808873650632*T20);



			// this one include the quasiparticle terms
			// return (1.955262098990002e-13 - 1.0286102187790367e-9*T + 6.53957782374812e-7*T2 + 0.00008662676108879536*T3 - 0.008921665164687816*T4 +
		 //     0.31950076291542767*T5 - 6.066129823797041*T6 + 68.25920565155266*T7 - 468.0465644725971*T8 + 1909.401213330688*T9 -
		 //     4215.045681169726*T10 + 3168.104197748018*T11 + 7449.660320183239*T12 - 24798.529692619188*T13 +
		 //     34657.23217345418*T14 - 28759.299235605617*T15 + 15128.827919433375*T16 - 5066.172489658255*T17 +
		 //     1049.0939381113071*T18 - 122.39678150759512*T19 + 6.82617964355019*T20)/
		 //   (-1.58273592335643e-14 + 4.459265782307701e-11*T - 6.860700599531218e-8*T2 + 0.00008482961442168233*T3 - 0.006417475308485788*T4 +
		 //     0.2123930114903609*T5 - 3.92567977244017*T6 + 44.107342577609074*T7 - 308.617580166047*T8 + 1326.532923844008*T9 -
		 //     3337.310608286507*T10 + 4314.902473458209*T11 - 412.5262860067333*T12 - 8014.964006647219*T13 +
		 //     13941.815759905152*T14 - 12339.957215196044*T15 + 6547.824840344025*T16 - 2129.5411398985016*T17 +
		 //     415.83609907848324*T18 - 44.432209576757714*T19 + 2.4412911949704172*T20);


			// corrected cs2 (still need to add quasiparticle terms)

			// return (6.168534795173672e-12 + 5.535981061006803e-9*T - 2.520509001713953e-7*T2 - 0.000014980759163056897*T3 + 0.0015558879836002296*T4 -
		 //     0.058645894241900844*T5 + 1.2773515598657619*T6 - 18.106202244628932*T7 + 176.19358782347808*T8 -
		 //     1189.9879551618208*T9 + 5060.418258445097*T10 - 7868.134725349631*T11 - 28406.923625930394*T12 +
		 //     188211.5885808142*T13 - 509192.01388778473*T14 + 842233.2433687767*T15 - 921106.8592534221*T16 +
		 //     661931.6565155538*T17 - 287221.25361301214*T18 + 57741.60292838818*T19 - 179.31184892215887*T20)/
		 //   (3.8249266761134255e-12 + 3.4630985584010553e-9*T - 1.518192532884742e-7*T2 - 9.846065659704103e-6*T3 + 0.0009861256508949608*T4 -
		 //     0.036671740061085194*T5 + 0.7888982749225287*T6 - 10.980984272288149*T7 + 102.69669656471692*T8 - 619.892810323865*T9 +
		 //     1665.1231914967625*T10 + 7014.442646308297*T11 - 76528.628627045*T12 + 305420.81448270846*T13 - 726325.115714087*T14 +
		 //     1.1438167213955773e6*T15 - 1.2231396621334003e6*T16 + 865984.4569214052*T17 - 369874.9237960845*T18 +
		 //     72867.43243263564*T19 - 201.77339203185517*T20);


			// return (8.785678474895203e-10 + 8.412358643395344e-7*T - 0.000053176761579355054*T2 + 0.0005632404616729549*T3 + 0.04615845152734432*T4 -
	  //    2.2077756833074003*T5 + 49.974780659117776*T6 - 711.7207304527724*T7 + 6881.109828877766*T8 - 46373.66186165702*T9 +
	  //    219505.94136608983*T10 - 729796.1527008245*T11 + 1.6996582850974011e6*T12 - 2.754812193355131e6*T13 +
	  //    3.1195434969091793e6*T14 - 2.5735301875020415e6*T15 + 1.7598229344048852e6*T16 - 1.139704389310528e6*T17 +
	  //    616869.927003753*T18 - 209866.21975520515*T19 + 35454.73148100636*T20)/
	  //  (5.595945257754411e-10 + 5.47159182045909e-7*T - 0.00003326334768621545*T2 + 0.00024651446889396877*T3 + 0.03501138290941951*T4 -
	  //    1.561455313595892*T5 + 34.5879837031573*T6 - 485.981053208654*T7 + 4636.162111624037*T8 - 30706.688970037827*T9 +
	  //    141753.6597580666*T10 - 454168.63323405077*T11 + 1.0020159262766113e6*T12 - 1.5049326480781105e6*T13 +
	  //    1.5656905767209225e6*T14 - 1.2944924964444812e6*T15 + 1.1453287617725453e6*T16 - 1.0496343979082939e6*T17 +
	  //    683998.0153844289*T18 - 248620.8804126722*T19 + 42576.48998942066*T20);
	  	#endif
	#else
		return 0.0;
	#endif
}

double lambdaBS(double T)
{
	#ifndef CONFORMAL_EOS

		#ifdef BEST
			double T2 = T * T;
			double T3 = T2 * T;
			double T4 = T3 * T;
			double T5 = T4 * T;
			double T6 = T5 * T;
			double T7 = T6 * T;
			double T8 = T7 * T;
			double T9 = T8 * T;
			double T10 = T9 * T;
			double T11 = T10 * T;
			double T12 = T11 * T;
			double T13 = T12 * T;
			double T14 = T13 * T;
			double T15 = T14 * T;
			double T16 = T15 * T;
			double T17 = T16 * T;
			double T18 = T17 * T;
			double T19 = T18 * T;
			double T20 = T19 * T;

			return (-0.05108552557140905 + 1.1920234914279368*T - 15.219316725127543*T2 + 130.61531842041347*T3 - 770.8911863265103*T4 +
     3118.871760309068*T5 - 8468.953148265928*T6 + 14145.287679451932*T7 - 8803.791407406065*T8 - 18733.99128349794*T9 +
     51682.35436183604*T10 - 36637.21011161534*T11 - 61257.49912224253*T12 + 191225.24718245308*T13 -
     251340.30055725976*T14 + 202939.1188463238*T15 - 105685.13512860639*T16 + 33524.63767044643*T17 -
     4874.2587031234525*T18 - 365.5711567970833*T19 + 185.5872650105065*T20)/
   (-0.43047278991522 + 12.70413282512127*T - 178.2263165530798*T2 + 1509.5366934223478*T3 - 8376.943970980205*T4 +
     31428.77486169897*T5 - 79175.51654902888*T6 + 124066.90852961707*T7 - 80374.1971456783*T8 - 103295.02037076751*T9 +
     265890.2087802455*T10 - 98952.10428951876*T11 - 390026.4365996752*T12 + 644747.1964612629*T13 - 182474.9416627948*T14 -
     671918.0845273717*T15 + 1.1345950862087505e6*T16 - 928481.0281592731*T17 + 451241.4690115756*T18 -
     126100.26540849869*T19 + 15861.53970099384*T20);

		#else
			double T1 = (double)T;
			double T2 = T1 * T1;
			double T3 = T2 * T1;
			double T4 = T3 * T1;
			double T5 = T4 * T1;
			double T6 = T5 * T1;
			double T7 = T6 * T1;
			double T8 = T7 * T1;
			double T9 = T8 * T1;
			double T10 = T9 * T1;
			double T11 = T10 * T1;
			double T12 = T11 * T1;
			double T13 = T12 * T1;
			double T14 = T13 * T1;
			double T15 = T14 * T1;
			double T16 = T15 * T1;
			double T17 = T16 * T1;
			double T18 = T17 * T1;
			double T19 = T18 * T1;
			double T20 = T19 * T1;
			return (9.07283109760587e-13 + 1.044356089600688e-9*T + 1.8570825459205554e-8*T2 - 0.000010383747248591741*T3 + 0.0006725182074002623*T4 -
		     0.021958187215747656*T5 + 0.4397556923078744*T6 - 5.868891727895856*T7 + 55.38848339983933*T8 - 387.12780497674385*T9 +
		     1957.1972733740815*T10 - 6185.740163029079*T11 + 10967.838876955766*T12 - 7453.353749819169*T13 -
		     8975.522847222626*T14 + 25455.37593396117*T15 - 27106.77742447009*T16 + 18163.258154641186*T17 -
		     8995.775257104488*T18 + 2661.0142932905237*T19 - 94.1340107098656*T20)/
		   (1.4669639567940816e-12 + 1.7120564097461783e-9*T + 3.6256018584537294e-8*T2 - 0.000017270779862929184*T3 + 0.0010862686698553277*T4 -
		     0.03423463213641015*T5 + 0.6447796042110534*T6 - 7.521967258007095*T7 + 49.0085873207005*T8 - 19.491753003885083*T9 -
		     3275.060944004637*T10 + 36151.77467550509*T11 - 196672.95923713865*T12 + 653352.8180727956*T13 -
		     1.442644427816317e6*T14 + 2.198052464714799e6*T15 - 2.3213934123898284e6*T16 + 1.6476268842604957e6*T17 -
		     719187.3926244609*T18 + 152609.79225659932*T19 - 4301.533615127118*T20);


			// return (7.330039214736775e-10 + 8.894506255048703e-7*T - 0.000049974175452658275*T2 - 9.337111075090562e-7*T3 + 0.07543283531073088*T4 -
	  //    3.0576933072466503*T5 + 66.1676002531837*T6 - 929.0899279256007*T7 + 9009.535727333901*T8 - 61778.618101217246*T9 +
	  //    301802.8946289559*T10 - 1.0505943391130269e6*T11 + 2.596541015041242e6*T12 - 4.518109922850909e6*T13 +
	  //    5.485987981766749e6*T14 - 4.596268825449239e6*T15 + 2.627384235942857e6*T16 - 1.0280580502970134e6*T17 +
	  //    286004.61825759185*T18 - 57020.10202623287*T19 + 7439.001976650034*T20)/
	  //  (1.2699661254376854e-9 + 1.6173859447889161e-6*T - 0.00008143005470274076*T2 - 0.0008621470997729544*T3 + 0.17312802273162223*T4 -
	  //    6.4674970296775465*T5 + 135.47466437765917*T6 - 1859.371838543868*T7 + 17596.954257662364*T8 - 116747.57565292931*T9 +
	  //    543189.3790655793*T10 - 1.7564526803807614e6*T11 + 3.8804216606247593e6*T12 - 5.685163953052096e6*T13 +
	  //    5.376726801713576e6*T14 - 3.4697202033568234e6*T15 + 2.3734409248196464e6*T16 - 2.3226994928789902e6*T17 +
	  //    1.7290210834476838e6*T18 - 681178.4923250087*T19 + 122913.34459977112*T20);

	   #endif
	#else
		return 0.0;
	#endif
}

























